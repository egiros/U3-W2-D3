{"ast":null,"code":"var _jsxFileName = \"/Users/egidio/Desktop/2_Settimana React Advanced/S10:L3 - React Router/3_Consegna S10:L3/U3-W2-D3/netflix-in-react/src/Components/MovieGallery.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport { Row } from \"react-bootstrap\";\nimport OMDB_URL from \"../helpers/OmbdUrl\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MovieGallery = ({\n  category\n}) => {\n  _s();\n  const [movies, setMovies] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${OMDB_URL}&s=${encodeURIComponent(category)}`);\n        const data = await response.json();\n        setMovies(data.Search);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n    fetchData();\n  }, [category, apiKey]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"bg-dark text-white mb-5\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: category\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container-fluid mt-2 mb-3\",\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        className: \"row-cols-1 row-cols-sm-2 row-cols-lg-4 row-cols-xl-6 mb-4 g-2 text-center\",\n        children: movies.map(movie => /*#__PURE__*/_jsxDEV(MovieCard, {\n          movie: movie\n        }, movie.imdbID, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(MovieGallery, \"MO6b3PSP3RIUqZ8gtSrBZBVtBbs=\");\n_c = MovieGallery;\nexport default MovieGallery;\nvar _c;\n$RefreshReg$(_c, \"MovieGallery\");","map":{"version":3,"names":["React","useState","useEffect","MovieCard","Row","OMDB_URL","jsxDEV","_jsxDEV","MovieGallery","category","_s","movies","setMovies","fetchData","response","fetch","encodeURIComponent","data","json","Search","error","console","apiKey","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","movie","imdbID","_c","$RefreshReg$"],"sources":["/Users/egidio/Desktop/2_Settimana React Advanced/S10:L3 - React Router/3_Consegna S10:L3/U3-W2-D3/netflix-in-react/src/Components/MovieGallery.jsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport MovieCard from \"./MovieCard\";\nimport { Row } from \"react-bootstrap\";\nimport OMDB_URL from \"../helpers/OmbdUrl\";\n\nconst MovieGallery = ({ category }) => {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(`${OMDB_URL}&s=${encodeURIComponent(category)}`);\n        const data = await response.json();\n        setMovies(data.Search);\n      } catch (error) {\n        console.error(\"Error fetching data:\", error);\n      }\n    };\n\n    fetchData();\n  }, [category, apiKey]);\n\n  return (\n    <div className=\"bg-dark text-white mb-5\">\n      <h2>{category}</h2>\n      <div className=\"container-fluid mt-2 mb-3\">\n        <Row className=\"row-cols-1 row-cols-sm-2 row-cols-lg-4 row-cols-xl-6 mb-4 g-2 text-center\">\n          {movies.map((movie) => (\n            <MovieCard key={movie.imdbID} movie={movie} />\n          ))}\n        </Row>\n      </div>\n    </div>\n  );\n};\n\nexport default MovieGallery;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,GAAG,QAAQ,iBAAiB;AACrC,OAAOC,QAAQ,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,YAAY,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACrC,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAExCC,SAAS,CAAC,MAAM;IACd,MAAMW,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEV,QAAS,MAAKW,kBAAkB,CAACP,QAAQ,CAAE,EAAC,CAAC;QAC7E,MAAMQ,IAAI,GAAG,MAAMH,QAAQ,CAACI,IAAI,CAAC,CAAC;QAClCN,SAAS,CAACK,IAAI,CAACE,MAAM,CAAC;MACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;QACdC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;MAC9C;IACF,CAAC;IAEDP,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACJ,QAAQ,EAAEa,MAAM,CAAC,CAAC;EAEtB,oBACEf,OAAA;IAAKgB,SAAS,EAAC,yBAAyB;IAAAC,QAAA,gBACtCjB,OAAA;MAAAiB,QAAA,EAAKf;IAAQ;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eACnBrB,OAAA;MAAKgB,SAAS,EAAC,2BAA2B;MAAAC,QAAA,eACxCjB,OAAA,CAACH,GAAG;QAACmB,SAAS,EAAC,2EAA2E;QAAAC,QAAA,EACvFb,MAAM,CAACkB,GAAG,CAAEC,KAAK,iBAChBvB,OAAA,CAACJ,SAAS;UAAoB2B,KAAK,EAAEA;QAAM,GAA3BA,KAAK,CAACC,MAAM;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAC9C;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAAClB,EAAA,CA7BIF,YAAY;AAAAwB,EAAA,GAAZxB,YAAY;AA+BlB,eAAeA,YAAY;AAAC,IAAAwB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}